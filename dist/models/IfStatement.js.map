{"version":3,"sources":["../../src/models/IfStatement.js"],"names":["IfStatement","Token","constructor","test","consequent","alternate","Object","seal","toString","hasAlternate","hasNestedIf"],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAMA,WAAN,SAA0BC,eAA1B,CAAgC;AAC5BC,kBAAc;AACV;;AAEA,aAAKC,IAAL,GAAkB,IAAlB;AACA,aAAKC,UAAL,GAAkB,IAAlB;AACA,aAAKC,SAAL,GAAkB,IAAlB;;AAEAC,eAAOC,IAAP,CAAY,IAAZ;AACH;;AAEDC,eAAW;AACP,eAAO,cAAP;AACH;;AAED,QAAIC,YAAJ,GAAmB;AACf,eAAO,KAAKJ,SAAL,KAAmB,IAA1B;AACH;;AAED,QAAIK,WAAJ,GAAkB;AACd,eAAO,KAAKL,SAAL,YAA0BL,WAAjC;AACH;AArB2B;;kBAwBjBA,W","file":"IfStatement.js","sourcesContent":["import Token from './Token';\n\nclass IfStatement extends Token {\n    constructor() {\n        super();\n\n        this.test       = null;\n        this.consequent = null;\n        this.alternate  = null;\n\n        Object.seal(this);\n    }\n\n    toString() {\n        return 'if_statement';\n    }\n\n    get hasAlternate() {\n        return this.alternate !== null;\n    }\n\n    get hasNestedIf() {\n        return this.alternate instanceof IfStatement;\n    }\n}\n\nexport default IfStatement;"]}